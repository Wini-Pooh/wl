<!-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–ª—è –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞ -->
<!-- –í–µ—Ä—Å–∏—è 3.0 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π -->

<!-- –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π -->
<div class="toast-container position-fixed bottom-0 end-0 p-3"></div>

<!-- –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ AJAX –∑–∞–ø—Ä–æ—Å–æ–≤ -->
<div id="modalContainer"></div>

<!-- –û–±—â–∏–µ —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω -->
<style>
.modal-dialog {
    max-width: 800px;
}

.img-thumbnail {
    border: 1px solid #dee2e6;
    border-radius: 4px;
}

.btn:disabled {
    opacity: 0.6;
    cursor: not-allowed;
}

.progress {
    height: 8px;
    background-color: #e9ecef;
    border-radius: 4px;
}

.progress-bar {
    height: 100%;
    background-color: #007bff;
    border-radius: 4px;
    transition: width 0.3s ease;
}

.upload-zone {
    border: 2px dashed #dee2e6;
    border-radius: 8px;
    padding: 40px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
}

.upload-zone:hover {
    border-color: #007bff;
    background-color: #f8f9fa;
}

.upload-zone.dragover {
    border-color: #007bff;
    background-color: #e7f1ff;
}

.file-list {
    max-height: 300px;
    overflow-y: auto;
}

.file-item {
    display: flex;
    align-items: center;
    padding: 8px;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    margin-bottom: 8px;
    background: white;
}

.file-item .file-icon {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 12px;
    border-radius: 4px;
    background: #f8f9fa;
}

.file-item .file-info {
    flex: 1;
    min-width: 0;
}

.file-item .file-name {
    font-weight: 500;
    margin-bottom: 2px;
    word-break: break-all;
}

.file-item .file-size {
    font-size: 0.875rem;
    color: #6c757d;
}

.file-item .file-actions {
    display: flex;
    gap: 8px;
}

.modal-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 200px;
}

.toast {
    border: none;
    box-shadow: 0 4px 16px rgba(0,0,0,0.15);
}
</style>

<script>
/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
 * –í–µ—Ä—Å–∏—è 3.0 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
 */
class ProjectModalManagerFixed {
    constructor(projectId) {
        this.projectId = projectId;
        this.activeModal = null;
        this.isInitialized = false;
        this.modalHandlers = new Map(); // –ö–∞—Ä—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ProjectModalManagerFixed –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞:', this.projectId);
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        if (window.modalManagerInstance) {
            console.warn('‚ö†Ô∏è Modal Manager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä');
            return window.modalManagerInstance;
        }
        
        window.modalManagerInstance = this;
        this.init();
    }

    init() {
        if (this.isInitialized) {
            console.warn('‚ö†Ô∏è Modal Manager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ProjectModalManagerFixed...');
        
        // –û—á–∏—â–∞–µ–º –ª—é–±—ã–µ –æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ backdrop'—ã
        this.cleanupBackdrops();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        this.initModalHandlers();
        
        // AJAX –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã (AJAX –∑–∞–ø—Ä–æ—Å—ã —É–¥–∞–ª–µ–Ω—ã)
        // this.setupAjax();
        
        this.isInitialized = true;
        console.log('‚úÖ Modal Manager —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    setupAjax() {
        // AJAX –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã
        console.log('‚ÑπÔ∏è AJAX –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã');
        /*
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        */
    }

    initModalHandlers() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...');
        
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ–º –í–°–ï —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.removeAllModalHandlers();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º namespace
        $(document).on('click.modalManagerFixed', '[data-modal-type]', (e) => {
            e.preventDefault();
            e.stopImmediatePropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
            
            const $button = $(e.currentTarget);
            const modalType = $button.data('modal-type');
            
            console.log('üîò –ö–ª–∏–∫ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–µ:', modalType, 'time:', Date.now());
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞
            if ($button.prop('disabled') || $button.hasClass('loading')) {
                console.log('üö´ –ö–Ω–æ–ø–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–ª–∏–∫');
                return false;
            }
            
            // –£—Å–∏–ª–µ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –¥–≤–æ–π–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
            const lastClick = $button.data('last-click') || 0;
            const currentTime = Date.now();
            
            if (currentTime - lastClick < 1500) { // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –¥–æ 1.5 —Å–µ–∫—É–Ω–¥
                console.log('üö´ –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º. Last:', lastClick, 'Current:', currentTime);
                return false;
            }
            
            $button.data('last-click', currentTime);
            
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            $button.prop('disabled', true).addClass('loading');
            
            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–µ:', modalType);
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
            this.handleModalClick(modalType, $button);
            
            return false;
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã—Ö backdrop'–æ–≤
        $(document).on('click.modalManagerFixed', '.modal-backdrop', (e) => {
            console.log('üßπ –ö–ª–∏–∫ –ø–æ backdrop, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ—á–∏—Å—Ç–∫–∏...');
            this.cleanupBackdropsDelayed();
        });
        
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    removeAllModalHandlers() {
        console.log('üßπ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω...');
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –ª—é–±—ã–º–∏ modal namespace
        $(document).off('.modalManager');
        $(document).off('.modalManagerFixed');
        $(document).off('.modalClick');
        $(document).off('.projectModal');
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        $(document).off('click', '[data-modal-type]');
        $('[data-modal-type]').off('click');
        
        // –û—á–∏—â–∞–µ–º –∫–∞—Ä—Ç—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        this.modalHandlers.clear();
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        window.photoUploadHandlersInitialized = false;
        window.schemeUploadHandlersInitialized = false;
        window.designUploadHandlersInitialized = false;
        window.documentUploadHandlersInitialized = false;
        
        console.log('üßπ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω —É–¥–∞–ª–µ–Ω—ã');
    }

    handleModalClick(modalType, $button) {
        console.log('üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É:', modalType);
        
        try {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º
            const staticModals = ['photo', 'scheme', 'design', 'document', 'stage', 'event'];
            
            if (staticModals.includes(modalType)) {
                this.showStaticModal(modalType);
            } else {
                this.loadDynamicModal(modalType);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–ª–∏–∫–∞ –ø–æ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É:', error);
            this.showErrorToast('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
        } finally {
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±—ã—Å—Ç—Ä—ã—Ö –¥–≤–æ–π–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
            setTimeout(() => {
                $button.prop('disabled', false).removeClass('loading');
            }, 2000);
        }
    }

    showStaticModal(modalType) {
        console.log(`üìã –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: ${modalType}`);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        let modalId;
        switch(modalType) {
            case 'photo':
                modalId = 'uploadPhotoModal';
                break;
            case 'scheme':
                modalId = 'uploadSchemeModal';
                break;
            case 'design':
                modalId = 'uploadDesignModal';
                break;
            case 'document':
                modalId = 'documentPageModal';
                break;
            case 'stage':
                modalId = 'stageModal';
                break;
            case 'event':
                modalId = 'eventModal';
                break;
            default:
                console.error(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: ${modalType}`);
                this.showErrorToast(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: ${modalType}`);
                return;
        }
        
        const modalElement = document.getElementById(modalId);
        if (!modalElement) {
            console.error(`‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${modalId} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM`);
            this.showErrorToast(`–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${modalType} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
            return;
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ª—é–±—ã–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        this.closeActiveModal();
        
        // –û—á–∏—â–∞–µ–º backdrop'—ã
        this.cleanupBackdrops();
        
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Bootstrap –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = new bootstrap.Modal(modalElement, {
                backdrop: 'static',
                keyboard: true,
                focus: true
            });
            
            this.activeModal = modal;
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            this.initSpecificModalHandlers(modalType, modalElement);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal.show();
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º namespace
            $(modalElement).off('hidden.bs.modal.staticModal').on('hidden.bs.modal.staticModal', () => {
                this.onModalClosed();
            });
            
            console.log(`‚úÖ –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ ${modalType} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ`);
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ ${modalType}:`, error);
            this.showErrorToast('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
        }
    }

    initSpecificModalHandlers(modalType, modalElement) {
        console.log(`üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è: ${modalType}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∏ –ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const handlerKey = `${modalType}_${modalElement.id}`;
        if (this.modalHandlers.has(handlerKey)) {
            console.log(`‚ÑπÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è ${modalType} —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã`);
            return;
        }
        
        switch(modalType) {
            case 'photo':
                this.initPhotoHandlers(modalElement);
                break;
            case 'scheme':
                this.initSchemeHandlers(modalElement);
                break;
            case 'design':
                this.initDesignHandlers(modalElement);
                break;
            case 'document':
                this.initDocumentHandlers(modalElement);
                break;
            case 'stage':
                this.initStageHandlers(modalElement);
                break;
            case 'event':
                this.initEventHandlers(modalElement);
                break;
        }
        
        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
        this.modalHandlers.set(handlerKey, true);
    }

    initPhotoHandlers(modalElement) {
        console.log('üì∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...');
        if (typeof initPhotoModalHandlers === 'function') {
            initPhotoModalHandlers();
        }
    }
    
    initSchemeHandlers(modalElement) {
        console.log('üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å—Ö–µ–º...');
        if (typeof initSchemeModalHandlers === 'function') {
            initSchemeModalHandlers();
        }
    }
    
    initDesignHandlers(modalElement) {
        console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–∏–∑–∞–π–Ω–∞...');
        if (typeof initDesignModalHandlers === 'function') {
            initDesignModalHandlers();
        }
    }
    
    initDocumentHandlers(modalElement) {
        console.log('üìÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
        if (typeof initDocumentModalHandlers === 'function') {
            initDocumentModalHandlers();
        }
    }
    
    initEventHandlers(modalElement) {
        console.log('üìÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
        if (typeof initEventModalHandlers === 'function') {
            initEventModalHandlers();
        }
    }

    initPhotoHandlers(modalElement) {
        console.log('üì∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π...');
        
        // –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const uploadZone = modalElement.querySelector('#photoUploadZone');
        const fileInput = modalElement.querySelector('#photoFileInput');
        const uploadBtn = modalElement.querySelector('#uploadPhotoBtn');
        
        if (!uploadZone || !fileInput) {
            console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π');
            return;
        }
        
        // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        const newUploadZone = uploadZone.cloneNode(true);
        uploadZone.parentNode.replaceChild(newUploadZone, uploadZone);
        
        const newFileInput = fileInput.cloneNode(true);
        fileInput.parentNode.replaceChild(newFileInput, fileInput);
        
        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        let selectedFiles = [];
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drag & drop –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        newUploadZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            e.stopPropagation();
            newUploadZone.classList.add('dragover');
        });
        
        newUploadZone.addEventListener('dragleave', (e) => {
            e.preventDefault();
            e.stopPropagation();
            newUploadZone.classList.remove('dragover');
        });
        
        newUploadZone.addEventListener('drop', (e) => {
            e.preventDefault();
            e.stopPropagation();
            newUploadZone.classList.remove('dragover');
            
            const files = Array.from(e.dataTransfer.files);
            this.handlePhotoFileSelection(files, modalElement);
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∑–æ–Ω–µ –∑–∞–≥—Ä—É–∑–∫–∏
        newUploadZone.addEventListener('click', (e) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
            if (!e.target.closest('button')) {
                newFileInput.click();
            }
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
        newFileInput.addEventListener('change', (e) => {
            const files = Array.from(e.target.files);
            this.handlePhotoFileSelection(files, modalElement);
        });
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        if (uploadBtn) {
            // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
            const newUploadBtn = uploadBtn.cloneNode(true);
            uploadBtn.parentNode.replaceChild(newUploadBtn, uploadBtn);
            
            newUploadBtn.addEventListener('click', () => {
                this.uploadPhotos(modalElement);
            });
        }
        
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }

    handlePhotoFileSelection(files, modalElement) {
        console.log('üìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤:', files.length);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const imageFiles = files.filter(file => file.type.startsWith('image/'));
        
        if (imageFiles.length === 0) {
            this.showErrorToast('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
            return;
        }
        
        if (imageFiles.length !== files.length) {
            this.showWarningToast(`–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${files.length - imageFiles.length} –Ω–µ-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        this.displaySelectedPhotos(imageFiles, modalElement);
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
        const uploadBtn = modalElement.querySelector('#uploadPhotoBtn');
        if (uploadBtn) {
            uploadBtn.disabled = false;
        }
    }

    displaySelectedPhotos(files, modalElement) {
        const fileList = modalElement.querySelector('#photoFileList');
        const fileItems = modalElement.querySelector('#photoFileItems');
        
        if (!fileList || !fileItems) return;
        
        fileItems.innerHTML = '';
        
        files.forEach((file, index) => {
            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';
            fileItem.innerHTML = `
                <div class="file-icon">
                    <i class="bi bi-image text-primary"></i>
                </div>
                <div class="file-info">
                    <div class="file-name">${file.name}</div>
                    <div class="file-size">${this.formatFileSize(file.size)}</div>
                </div>
                <div class="file-actions">
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="this.closest('.file-item').remove()">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            `;
            fileItems.appendChild(fileItem);
        });
        
        fileList.style.display = 'block';
    }

    uploadPhotos(modalElement) {
        console.log('üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–±–µ–∑ AJAX)...');
        
        const fileInput = modalElement.querySelector('#photoFileInput');
        const form = modalElement.querySelector('#uploadPhotoForm');
        
        if (!fileInput.files.length) {
            this.showErrorToast('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
            return;
        }
        
        // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ AJAX –∑–∞–ø—Ä–æ—Å–∞
        this.showSuccessToast('–§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞');
        this.closeActiveModal();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è
        if (typeof window.reloadPhotos === 'function') {
            window.reloadPhotos();
        }
    }
    }

    showPhotoUploadProgress(modalElement) {
        const progress = modalElement.querySelector('#photoUploadProgress');
        if (progress) {
            progress.style.display = 'block';
        }
    }

    updatePhotoProgress(percent, modalElement) {
        const progressBar = modalElement.querySelector('#photoProgressBar');
        const progressText = modalElement.querySelector('#photoProgressText');
        
        if (progressBar) {
            progressBar.style.width = percent + '%';
        }
        if (progressText) {
            progressText.textContent = Math.round(percent) + '%';
        }
    }

    hidePhotoUploadProgress(modalElement) {
        const progress = modalElement.querySelector('#photoUploadProgress');
        if (progress) {
            progress.style.display = 'none';
        }
    }

    closeActiveModal() {
        if (this.activeModal) {
            try {
                this.activeModal.hide();
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error);
            }
        }
    }

    onModalClosed() {
        console.log('üö™ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
        this.activeModal = null;
        this.cleanupBackdropsDelayed();
    }

    cleanupBackdrops() {
        $('.modal-backdrop').remove();
        $('body').removeClass('modal-open').css({
            'overflow': '',
            'padding-right': ''
        });
    }

    cleanupBackdropsDelayed() {
        setTimeout(() => {
            if ($('.modal:visible').length === 0) {
                this.cleanupBackdrops();
            }
        }, 150);
    }

    formatFileSize(bytes) {
        if (bytes === 0) return '0 –ë–∞–π—Ç';
        const k = 1024;
        const sizes = ['–ë–∞–π—Ç', '–ö–ë', '–ú–ë', '–ì–ë'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    showSuccessToast(message) {
        this.showToast(message, 'success');
    }

    showErrorToast(message) {
        this.showToast(message, 'error');
    }

    showWarningToast(message) {
        this.showToast(message, 'warning');
    }

    showToast(message, type = 'info') {
        const toastContainer = document.querySelector('.toast-container');
        if (!toastContainer) return;
        
        const toastId = 'toast_' + Date.now();
        const toastHtml = `
            <div class="toast" id="${toastId}" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <i class="bi bi-${this.getToastIcon(type)} me-2 text-${this.getToastColor(type)}"></i>
                    <strong class="me-auto">${this.getToastTitle(type)}</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            </div>
        `;
        
        toastContainer.insertAdjacentHTML('beforeend', toastHtml);
        
        const toast = new bootstrap.Toast(document.getElementById(toastId), {
            autohide: true,
            delay: 5000
        });
        
        toast.show();
    }

    getToastIcon(type) {
        const icons = {
            success: 'check-circle',
            error: 'exclamation-circle',
            warning: 'exclamation-triangle',
            info: 'info-circle'
        };
        return icons[type] || icons.info;
    }

    getToastColor(type) {
        const colors = {
            success: 'success',
            error: 'danger',
            warning: 'warning',
            info: 'info'
        };
        return colors[type] || colors.info;
    }

    getToastTitle(type) {
        const titles = {
            success: '–£—Å–ø–µ—à–Ω–æ',
            error: '–û—à–∏–±–∫–∞',
            warning: '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ',
            info: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
        };
        return titles[type] || titles.info;
    }

    // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    initStageHandlers(modalElement) {
        console.log('üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —ç—Ç–∞–ø–æ–≤...');
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —ç—Ç–∞–ø–æ–≤
    }

    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
    async loadDynamicModal(modalType) {
        console.log(`üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: ${modalType}`);
        // –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
$(document).ready(function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å projectId
    const projectId = window.projectId || $('meta[name="project-id"]').attr('content');
    
    if (!projectId) {
        console.error('‚ùå Project ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Modal Manager');
        return;
    }
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (window.modalManagerInstance) {
        console.log('‚ÑπÔ∏è Modal Manager —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return;
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    window.modalManager = new ProjectModalManagerFixed(projectId);
    
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π Modal Manager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞:', projectId);
});
</script>

<!-- –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ö–æ—Ç—Ñ–∏–∫—Å –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞—Å–æ–∫ -->
<script src="{{ asset('js/mask-hotfix.js') }}"></script>
