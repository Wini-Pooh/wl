/**
 * AJAX –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
 * –í–µ—Ä—Å–∏—è: 2.3 - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
 * –î–∞—Ç–∞: 2 –∞–≤–≥—É—Å—Ç–∞ 2025
 */

console.log('üí∞ –ó–∞–≥—Ä—É–∂–µ–Ω finance-ajax.js v2.3');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
window.financeAjaxInitialized = false;
window.currentEditingRecord = null;
window.actionButtonHandlersInitialized = false;
window.globalAjaxHandlersInitialized = false;


function initFinanceAjax() {
    if (window.financeAjaxInitialized) {
        console.log('‚ö†Ô∏è AJAX –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        return;
    }
    
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AJAX –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤ v2.3...');
    
    // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤ –Ω–∞—á–∞–ª–µ
    window.financeAjaxInitialized = true;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CSRF —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
    $.ajaxSetup({
        headers: {
            'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
        }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å jQuery
    if (typeof $ === 'undefined') {
        console.error('‚ùå jQuery –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω!');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ ID
    if (typeof window.projectId === 'undefined') {
        console.error('‚ùå Project ID –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω!');
    } else {
        console.log('‚úÖ Project ID:', window.projectId);
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ñ–æ—Ä–º—ã
    initWorkFormAjax();
    initMaterialFormAjax();
    initTransportFormAjax();
    initFinanceModalAjax();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    setupGlobalEventHandlers();
    
    console.log('‚úÖ AJAX –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤ v2.3 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
 */
function setupGlobalEventHandlers() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ —É–∂–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if (window.globalAjaxHandlersInitialized) {
        console.log('‚ö†Ô∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ AJAX –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ
    window.globalAjaxHandlersInitialized = true;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
    setupActionButtonHandlers();
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ AJAX
    $(document).ajaxError(function(event, xhr, settings, thrownError) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—Ä–µ—Ä–≤–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        if (xhr.statusText === 'abort') {
            return;
        }
        
        console.error('AJAX Error:', {
            url: settings.url,
            status: xhr.status,
            error: thrownError,
            response: xhr.responseText
        });
        
        let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏';
        
        if (xhr.status === 422) {
            // –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            try {
                const errors = JSON.parse(xhr.responseText);
                if (errors.errors) {
                    const errorList = Object.values(errors.errors).flat();
                    errorMessage = errorList.join('<br>');
                }
            } catch (e) {
                console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', e);
            }
        } else if (xhr.status === 500) {
            errorMessage = '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        } else if (xhr.status === 404) {
            errorMessage = '–†–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω';
        } else if (xhr.status === 403) {
            errorMessage = '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞';
        } else if (xhr.status === 0) {
            errorMessage = '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º';
        }
        
        showNotification(errorMessage, 'error');
    });
    
    // –£—Å–ø–µ—à–Ω—ã–µ AJAX –∑–∞–ø—Ä–æ—Å—ã
    $(document).ajaxSuccess(function(event, xhr, settings) {
        console.log('‚úÖ AJAX Success:', settings.url);
    });
    
    // –ù–∞—á–∞–ª–æ AJAX –∑–∞–ø—Ä–æ—Å–∞
    $(document).ajaxStart(function() {
        showPageLoader(true);
    });
    
    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö AJAX –∑–∞–ø—Ä–æ—Å–æ–≤
    $(document).ajaxStop(function() {
        showPageLoader(false);
    });
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
 */
function setupActionButtonHandlers() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
    if (window.actionButtonHandlersInitialized) {
        console.log('‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ
    window.actionButtonHandlersInitialized = true;
    
    // –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Å data-action
    $(document).off('click.action-buttons').on('click.action-buttons', '[data-action]', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        const action = $(this).data('action');
        const id = $(this).data('id');
        
        console.log(`üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è: ${action}`, { id, element: this });
        
        switch(action) {
            case 'edit-work':
                if (id && typeof editWork === 'function') {
                    editWork(id);
                } else {
                    console.error('‚ùå –§—É–Ω–∫—Ü–∏—è editWork –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ ID –Ω–µ —É–∫–∞–∑–∞–Ω', { id, editWorkExists: typeof editWork });
                }
                break;
                
            case 'delete-work':
                if (id) {
                    deleteFinanceRecord('work', id);
                } else {
                    console.error('‚ùå ID –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã');
                }
                break;
                
            case 'edit-material':
                if (id && typeof editMaterial === 'function') {
                    editMaterial(id);
                } else {
                    console.error('‚ùå –§—É–Ω–∫—Ü–∏—è editMaterial –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ ID –Ω–µ —É–∫–∞–∑–∞–Ω');
                }
                break;
                
            case 'delete-material':
                if (id) {
                    deleteFinanceRecord('material', id);
                } else {
                    console.error('‚ùå ID –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
                }
                break;
                
            case 'edit-transport':
                if (id && typeof editTransport === 'function') {
                    editTransport(id);
                } else {
                    console.error('‚ùå –§—É–Ω–∫—Ü–∏—è editTransport –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ ID –Ω–µ —É–∫–∞–∑–∞–Ω');
                }
                break;
                
            case 'delete-transport':
                if (id) {
                    deleteFinanceRecord('transport', id);
                } else {
                    console.error('‚ùå ID –Ω–µ —É–∫–∞–∑–∞–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞');
                }
                break;
                
            case 'add-work':
                // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
                console.log('üèóÔ∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã...');
                const workModalElement = document.getElementById('workModal');
                if (!workModalElement) {
                    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ workModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');
                    return;
                }
                if (typeof bootstrap === 'undefined') {
                    console.error('‚ùå Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
                    return;
                }
                const workModal = new bootstrap.Modal(workModalElement);
                workModal.show();
                break;
                
            case 'add-material':
                // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
                console.log('üì¶ –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞...');
                const materialModalElement = document.getElementById('materialModal');
                if (!materialModalElement) {
                    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ materialModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');
                    return;
                }
                if (typeof bootstrap === 'undefined') {
                    console.error('‚ùå Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
                    return;
                }
                const materialModal = new bootstrap.Modal(materialModalElement);
                materialModal.show();
                break;
                
            case 'add-transport':
                // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
                console.log('üöõ –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞...');
                const transportModalElement = document.getElementById('transportModal');
                if (!transportModalElement) {
                    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ transportModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');
                    return;
                }
                if (typeof bootstrap === 'undefined') {
                    console.error('‚ùå Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
                    return;
                }
                const transportModal = new bootstrap.Modal(transportModalElement);
                transportModal.show();
                break;
                
            default:
                console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${action}`);
        }
    });
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–Ω–æ–ø–æ–∫
    window.testActionButtons = function() {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π...');
        const buttons = document.querySelectorAll('[data-action]');
        console.log(`–ù–∞–π–¥–µ–Ω–æ –∫–Ω–æ–ø–æ–∫ —Å data-action: ${buttons.length}`);
        buttons.forEach((btn, index) => {
            console.log(`–ö–Ω–æ–ø–∫–∞ ${index + 1}:`, {
                action: btn.getAttribute('data-action'),
                id: btn.getAttribute('data-id'),
                element: btn
            });
        });
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã
    window.debugFinanceSystem = function() {
        console.log('üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:');
        console.log('- financeAjaxInitialized:', window.financeAjaxInitialized);
        console.log('- actionButtonHandlersInitialized:', window.actionButtonHandlersInitialized);
        console.log('- globalAjaxHandlersInitialized:', window.globalAjaxHandlersInitialized);
        console.log('- projectId:', window.projectId);
        console.log('- jQuery –∑–∞–≥—Ä—É–∂–µ–Ω:', typeof $ !== 'undefined');
        console.log('- Bootstrap –∑–∞–≥—Ä—É–∂–µ–Ω:', typeof bootstrap !== 'undefined');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        const modals = ['workModal', 'materialModal', 'transportModal'];
        modals.forEach(modalId => {
            const modal = document.getElementById(modalId);
            console.log(`- ${modalId} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, !!modal);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
        const functions = ['editWork', 'editMaterial', 'editTransport', 'deleteFinanceRecord'];
        functions.forEach(funcName => {
            console.log(`- ${funcName} —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, typeof window[funcName] === 'function');
        });
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        window.testActionButtons();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ä–º
        const forms = ['workForm', 'materialForm', 'transportForm'];
        forms.forEach(formId => {
            const form = document.getElementById(formId);
            console.log(`- ${formId} —Ñ–æ—Ä–º–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, !!form);
            if (form) {
                const fields = form.querySelectorAll('input, select, textarea');
                console.log(`  - –ø–æ–ª—è –≤ ${formId}:`, fields.length);
            }
        });
    };
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AJAX –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç
 */
function initWorkFormAjax() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AJAX –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç...');
    
    const form = document.getElementById('workForm');
    if (!form) {
        console.warn('‚ö†Ô∏è –§–æ—Ä–º–∞ —Ä–∞–±–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —Ñ–æ—Ä–º–∞
    if ($(form).data('ajax-initialized')) {
        console.log('‚ö†Ô∏è –§–æ—Ä–º–∞ —Ä–∞–±–æ—Ç —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —Ñ–æ—Ä–º—É –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
    $(form).data('ajax-initialized', true);
    
    $(form).on('submit.ajax', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        console.log('üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç —á–µ—Ä–µ–∑ AJAX...');
        
        const formData = new FormData(this);
        const submitBtn = $(this).find('button[type="submit"]');
        const originalText = submitBtn.html();
        const isEditing = formData.get('work_id') && formData.get('work_id') !== '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.prop('disabled', true)
                 .html('<i class="bi bi-arrow-clockwise spin me-1"></i>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
        clearFormErrors(this);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∏ –º–µ—Ç–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∂–∏–º–∞
        let url = this.action;
        let method = 'POST';
        
        if (isEditing) {
            // –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º _method=PUT
            formData.append('_method', 'PUT');
            console.log('‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã');
        } else {
            console.log('‚ûï –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã');
        }
        
        $.ajax({
            url: url,
            method: method,
            data: formData,
            processData: false,
            contentType: false,
            beforeSend: function() {
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç—ã...', {
                    url: url,
                    isEditing: isEditing,
                    formData: Object.fromEntries(formData.entries())
                });
            },
            success: function(response) {
                console.log('‚úÖ –†–∞–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:', response);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = bootstrap.Modal.getInstance(document.getElementById('workModal'));
                if (modal) {
                    modal.hide();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification(
                    response.message || (isEditing ? '–†–∞–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞' : '–†–∞–±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞'), 
                    'success'
                );
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                refreshFinanceData();
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                resetForm(form);
            },
            error: function(xhr) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã:', xhr);
                
                if (xhr.status === 422) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                    const errors = xhr.responseJSON?.errors || {};
                    showFormErrors(form, errors);
                    showNotification('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π', 'warning');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã', 'error');
                }
            },
            complete: function() {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    console.log('‚úÖ AJAX –¥–ª—è —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AJAX –¥–ª—è —Ñ–æ—Ä–º—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
 */
function initMaterialFormAjax() {
    console.log('üì¶ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AJAX –¥–ª—è —Ñ–æ—Ä–º—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...');
    
    const form = document.getElementById('materialForm');
    if (!form) {
        console.warn('‚ö†Ô∏è –§–æ—Ä–º–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —Ñ–æ—Ä–º–∞
    if ($(form).data('ajax-initialized')) {
        console.log('‚ö†Ô∏è –§–æ—Ä–º–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —Ñ–æ—Ä–º—É –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
    $(form).data('ajax-initialized', true);
    
    $(form).on('submit.ajax', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        console.log('üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —á–µ—Ä–µ–∑ AJAX...');
        
        const formData = new FormData(this);
        const submitBtn = $(this).find('button[type="submit"]');
        const originalText = submitBtn.html();
        const isEditing = formData.get('material_id') && formData.get('material_id') !== '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.prop('disabled', true)
                 .html('<i class="bi bi-arrow-clockwise spin me-1"></i>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
        clearFormErrors(this);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∏ –º–µ—Ç–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∂–∏–º–∞
        let url = this.action;
        let method = 'POST';
        
        if (isEditing) {
            // –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º _method=PUT
            formData.append('_method', 'PUT');
            console.log('‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
        } else {
            console.log('‚ûï –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞');
        }
        
        $.ajax({
            url: url,
            method: method,
            data: formData,
            processData: false,
            contentType: false,
            beforeSend: function() {
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞...', {
                    url: url,
                    isEditing: isEditing,
                    formData: Object.fromEntries(formData.entries())
                });
            },
            success: function(response) {
                console.log('‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', response);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = bootstrap.Modal.getInstance(document.getElementById('materialModal'));
                if (modal) {
                    modal.hide();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification(
                    response.message || (isEditing ? '–ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω' : '–ú–∞—Ç–µ—Ä–∏–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω'), 
                    'success'
                );
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                refreshFinanceData();
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                resetForm(form);
            },
            error: function(xhr) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞:', xhr);
                
                if (xhr.status === 422) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                    const errors = xhr.responseJSON?.errors || {};
                    showFormErrors(form, errors);
                    showNotification('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π', 'warning');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞', 'error');
                }
            },
            complete: function() {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    console.log('‚úÖ AJAX –¥–ª—è —Ñ–æ—Ä–º—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AJAX –¥–ª—è —Ñ–æ—Ä–º—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
 */
function initTransportFormAjax() {
    console.log('üöõ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AJAX –¥–ª—è —Ñ–æ—Ä–º—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞...');
    
    const form = document.getElementById('transportForm');
    if (!form) {
        console.warn('‚ö†Ô∏è –§–æ—Ä–º–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —Ñ–æ—Ä–º–∞
    if ($(form).data('ajax-initialized')) {
        console.log('‚ö†Ô∏è –§–æ—Ä–º–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —Ñ–æ—Ä–º—É –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
    $(form).data('ajax-initialized', true);
    
    $(form).on('submit.ajax', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        console.log('üöõ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ AJAX...');
        
        const formData = new FormData(this);
        const submitBtn = $(this).find('button[type="submit"]');
        const originalText = submitBtn.html();
        const isEditing = formData.get('transport_id') && formData.get('transport_id') !== '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.prop('disabled', true)
                 .html('<i class="bi bi-arrow-clockwise spin me-1"></i>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
        clearFormErrors(this);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∏ –º–µ—Ç–æ–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∂–∏–º–∞
        let url = this.action;
        let method = 'POST';
        
        if (isEditing) {
            // –î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º _method=PUT
            formData.append('_method', 'PUT');
            console.log('‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞');
        } else {
            console.log('‚ûï –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞');
        }
        
        $.ajax({
            url: url,
            method: method,
            data: formData,
            processData: false,
            contentType: false,
            beforeSend: function() {
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞...', {
                    url: url,
                    isEditing: isEditing,
                    formData: Object.fromEntries(formData.entries())
                });
            },
            success: function(response) {
                console.log('‚úÖ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', response);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = bootstrap.Modal.getInstance(document.getElementById('transportModal'));
                if (modal) {
                    modal.hide();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification(
                    response.message || (isEditing ? '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω' : '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω'), 
                    'success'
                );
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                refreshFinanceData();
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                resetForm(form);
            },
            error: function(xhr) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:', xhr);
                
                if (xhr.status === 422) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                    const errors = xhr.responseJSON?.errors || {};
                    showFormErrors(form, errors);
                    showNotification('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π', 'warning');
                } else {
                    showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞', 'error');
                }  
            },
            complete: function() {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    console.log('‚úÖ AJAX –¥–ª—è —Ñ–æ—Ä–º—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AJAX –¥–ª—è –æ–±—â–µ–≥–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 */
function initFinanceModalAjax() {
    console.log('üí∞ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AJAX –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞...');
    
    const form = document.getElementById('financeForm');
    if (!form) {
        console.warn('‚ö†Ô∏è –û–±—â–∞—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–æ—Ä–º—ã');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —Ñ–æ—Ä–º–∞
    if ($(form).data('ajax-initialized')) {
        console.log('‚ö†Ô∏è –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Ñ–æ—Ä–º–∞ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return;
    }
    
    // –û—Ç–º–µ—á–∞–µ–º —Ñ–æ—Ä–º—É –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é
    $(form).data('ajax-initialized', true);
    
    $(form).on('submit.ajax', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        console.log('üí∞ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—â–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ AJAX...');
        
        const formData = new FormData(this);
        const submitBtn = $(this).find('button[type="submit"]');
        const originalText = submitBtn.html();
        const financeType = formData.get('type');
        const isEditing = formData.get('finance_id') && formData.get('finance_id') !== '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
        submitBtn.prop('disabled', true)
                 .html('<i class="bi bi-arrow-clockwise spin me-1"></i>–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
        clearFormErrors(this);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
        let url = this.action;
        let method = 'POST';
        
        if (isEditing) {
            formData.append('_method', 'PUT');
            console.log(`‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ${financeType}`);
        } else {
            console.log(`‚ûï –†–µ–∂–∏–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${financeType}`);
        }
        
        $.ajax({
            url: url,
            method: method,
            data: formData,
            processData: false,
            contentType: false,
            beforeSend: function() {
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...', {
                    url: url,
                    type: financeType,
                    isEditing: isEditing,
                    formData: Object.fromEntries(formData.entries())
                });
            },
            success: function(response) {
                console.log(`‚úÖ ${financeType} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:`, response);
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                const modal = bootstrap.Modal.getInstance(document.getElementById('financeModal'));
                if (modal) {
                    modal.hide();
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                const actionText = isEditing ? '–æ–±–Ω–æ–≤–ª–µ–Ω–∞' : '–¥–æ–±–∞–≤–ª–µ–Ω–∞';
                showNotification(
                    response.message || `–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ ${actionText}`, 
                    'success'
                );
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
                refreshFinanceData();
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                resetForm(form);
            },
            error: function(xhr) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ${financeType}:`, xhr);
                
                if (xhr.status === 422) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                    const errors = xhr.responseJSON?.errors || {};
                    showFormErrors(form, errors);
                    showNotification('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π', 'warning');
                } else {
                    showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ ${financeType}`, 'error');
                }
            },
            complete: function() {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                submitBtn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    console.log('‚úÖ AJAX –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø–∏—Å–µ–π
 */
function editWork(id, workData = null) {
    console.log(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã #${id}...`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modalElement = document.getElementById('workModal');
    if (!modalElement) {
        console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ workModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');
        showNotification('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Bootstrap
    if (typeof bootstrap === 'undefined') {
        console.error('‚ùå Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        showNotification('Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω', 'error');
        return;
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(modalElement);
    
    if (workData) {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        fillWorkForm(workData);
        modal.show();
    } else {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ AJAX
        console.log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç—ã —á–µ—Ä–µ–∑ AJAX: /partner/projects/${window.projectId}/works/${id}`);
        $.ajax({
            url: `/partner/projects/${window.projectId}/works/${id}`,
            method: 'GET',
            success: function(response) {
                console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', response);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                let workData = null;
                if (response && response.data) {
                    workData = response.data;
                } else if (response && response.work) {
                    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {success: true, work: {...}}
                    workData = response.work;
                } else if (response && response.id) {
                    workData = response;
                } else {
                    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', response);
                    showNotification('–û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö', 'error');
                    return;
                }
                
                fillWorkForm(workData);
                modal.show();
            },
            error: function(xhr) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç—ã:', xhr);
                let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç—ã';
                
                if (xhr.status === 404) {
                    errorMessage = '–ó–∞–ø–∏—Å—å —Ä–∞–±–æ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
                } else if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message;
                }
                
                showNotification(errorMessage, 'error');
            }
        });
    }
}

function editMaterial(id, materialData = null) {
    console.log(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ #${id}...`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modalElement = document.getElementById('materialModal');
    if (!modalElement) {
        console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ materialModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');
        showNotification('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Bootstrap
    if (typeof bootstrap === 'undefined') {
        console.error('‚ùå Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        showNotification('Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω', 'error');
        return;
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(modalElement);
    
    if (materialData) {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        fillMaterialForm(materialData);
        modal.show();
    } else {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ AJAX
        console.log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞ —á–µ—Ä–µ–∑ AJAX: /partner/projects/${window.projectId}/materials/${id}`);
        $.ajax({
            url: `/partner/projects/${window.projectId}/materials/${id}`,
            method: 'GET',
            success: function(response) {
                console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', response);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                let materialData = null;
                if (response && response.data) {
                    materialData = response.data;
                } else if (response && response.material) {
                    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {success: true, material: {...}}
                    materialData = response.material;
                } else if (response && response.id) {
                    materialData = response;
                } else {
                    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', response);
                    showNotification('–û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö', 'error');
                    return;
                }
                
                fillMaterialForm(materialData);
                modal.show();
            },
            error: function(xhr) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞:', xhr);
                let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞';
                
                if (xhr.status === 404) {
                    errorMessage = '–ó–∞–ø–∏—Å—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
                } else if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message;
                }
                
                showNotification(errorMessage, 'error');
            }
        });
    }
}

function editTransport(id, transportData = null) {
    console.log(`‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ #${id}...`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modalElement = document.getElementById('transportModal');
    if (!modalElement) {
        console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ transportModal –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');
        showNotification('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Bootstrap
    if (typeof bootstrap === 'undefined') {
        console.error('‚ùå Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
        showNotification('Bootstrap –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω', 'error');
        return;
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = new bootstrap.Modal(modalElement);
    
    if (transportData) {
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã, –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        fillTransportForm(transportData);
        modal.show();
    } else {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ AJAX
        console.log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ AJAX: /partner/projects/${window.projectId}/transports/${id}`);
        $.ajax({
            url: `/partner/projects/${window.projectId}/transports/${id}`,
            method: 'GET',
            success: function(response) {
                console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', response);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                let transportData = null;
                if (response && response.data) {
                    transportData = response.data;
                } else if (response && response.transport) {
                    // –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {success: true, transport: {...}}
                    transportData = response.transport;
                } else if (response && response.id) {
                    transportData = response;
                } else {
                    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', response);
                    showNotification('–û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö', 'error');
                    return;
                }
                
                fillTransportForm(transportData);
                modal.show();
            },
            error: function(xhr) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:', xhr);
                let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞';
                
                if (xhr.status === 404) {
                    errorMessage = '–ó–∞–ø–∏—Å—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
                } else if (xhr.responseJSON && xhr.responseJSON.message) {
                    errorMessage = xhr.responseJSON.message;
                }
                
                showNotification(errorMessage, 'error');
            }
        });
    }
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º
 */
function fillWorkForm(data) {
    console.log('üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ä–∞–±–æ—Ç—ã –¥–∞–Ω–Ω—ã–º–∏:', data);
    
    const form = document.getElementById('workForm');
    if (!form) {
        console.error('‚ùå –§–æ—Ä–º–∞ workForm –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ ID
    const workIdField = form.querySelector('[name="work_id"]');
    if (workIdField) {
        workIdField.value = data.id || '';
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    const fieldMappings = {
        'name': data.name || '',
        'description': data.description || '',
        'quantity': data.quantity || '',
        'unit': data.unit || '—à—Ç',
        'price': data.price || ''
    };
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –ø–æ –∏–º–µ–Ω–∏
    Object.keys(fieldMappings).forEach(fieldName => {
        const input = form.querySelector(`[name="${fieldName}"]`);
        if (input) {
            input.value = fieldMappings[fieldName];
            console.log(`‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ ${fieldName}:`, fieldMappings[fieldName]);
        } else {
            console.warn(`‚ö†Ô∏è –ü–æ–ª–µ ${fieldName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–æ—Ä–º–µ`);
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const titleElement = document.querySelector('#workModalTitle');
    if (titleElement) {
        titleElement.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É';
    }
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    if (typeof updateWorkTotal === 'function') {
        updateWorkTotal();
    }
    
    console.log('‚úÖ –§–æ—Ä–º–∞ —Ä–∞–±–æ—Ç—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
}

function fillMaterialForm(data) {
    console.log('üì¶ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –¥–∞–Ω–Ω—ã–º–∏:', data);
    
    const form = document.getElementById('materialForm');
    if (!form) {
        console.error('‚ùå –§–æ—Ä–º–∞ materialForm –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ ID
    const materialIdField = form.querySelector('[name="material_id"]');
    if (materialIdField) {
        materialIdField.value = data.id || '';
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Å —É—á–µ—Ç–æ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—è —Ü–µ–Ω—ã
    const fieldMappings = {
        'name': data.name || '',
        'description': data.description || '',
        'quantity': data.quantity || '',
        'unit': data.unit || '—à—Ç',
        'unit_price': data.unit_price || data.price || '' // unit_price –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    };
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –ø–æ –∏–º–µ–Ω–∏
    Object.keys(fieldMappings).forEach(fieldName => {
        const input = form.querySelector(`[name="${fieldName}"]`);
        if (input) {
            input.value = fieldMappings[fieldName];
            console.log(`‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ ${fieldName}:`, fieldMappings[fieldName]);
        } else {
            console.warn(`‚ö†Ô∏è –ü–æ–ª–µ ${fieldName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–æ—Ä–º–µ`);
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const titleElement = document.querySelector('#materialModalTitle');
    if (titleElement) {
        titleElement.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª';
    }
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    if (typeof updateMaterialTotal === 'function') {
        updateMaterialTotal();
    }
    
    console.log('‚úÖ –§–æ—Ä–º–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
}

function fillTransportForm(data) {
    console.log('üöõ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã–º–∏:', data);
    
    const form = document.getElementById('transportForm');
    if (!form) {
        console.error('‚ùå –§–æ—Ä–º–∞ transportForm –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ ID
    const transportIdField = form.querySelector('[name="transport_id"]');
    if (transportIdField) {
        transportIdField.value = data.id || '';
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    const fieldMappings = {
        'name': data.name || '',
        'description': data.description || '',
        'quantity': data.quantity || '',
        'unit': data.unit || '—à—Ç',
        'price': data.price || ''
    };
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –ø–æ –∏–º–µ–Ω–∏
    Object.keys(fieldMappings).forEach(fieldName => {
        const input = form.querySelector(`[name="${fieldName}"]`);
        if (input) {
            input.value = fieldMappings[fieldName];
            console.log(`‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ ${fieldName}:`, fieldMappings[fieldName]);
        } else {
            console.warn(`‚ö†Ô∏è –ü–æ–ª–µ ${fieldName} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–æ—Ä–º–µ`);
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const titleElement = document.querySelector('#transportModalTitle');
    if (titleElement) {
        titleElement.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç';
    }
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    if (typeof updateTransportTotal === 'function') {
        updateTransportTotal();
    }
    
    console.log('‚úÖ –§–æ—Ä–º–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
}

/**
 * AJAX —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
 */
function deleteFinanceRecord(type, id, confirmMessage = null) {
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ ${type} #${id}...`);
    
    const typeLabel = getTypeLabel(type);
    const message = confirmMessage || `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${typeLabel}?`;
    
    if (!confirm(message)) {
        return;
    }
    
    const url = getDeleteUrl(type, id);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    showPageLoader(true);
    
    $.ajax({
        url: url,
        method: 'DELETE',
        beforeSend: function() {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ...', { type, id, url });
        },
        success: function(response) {
            console.log(`‚úÖ ${typeLabel} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω:`, response);
            
            showNotification(
                response.message || `${typeLabel} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`, 
                'success'
            );
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            refreshFinanceData();
        },
        error: function(xhr) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${type}:`, xhr);
            
            let errorMessage = `–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${typeLabel}`;
            if (xhr.responseJSON?.message) {
                errorMessage = xhr.responseJSON.message;
            } else if (xhr.status === 404) {
                errorMessage = `${typeLabel} –Ω–µ –Ω–∞–π–¥–µ–Ω`;
            } else if (xhr.status === 403) {
                errorMessage = `–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ${typeLabel}`;
            }
            
            showNotification(errorMessage, 'error');
        },
        complete: function() {
            showPageLoader(false);
        }
    });
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
function refreshFinanceData() {
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    if (!window.projectId) {
        console.error('‚ùå ProjectId –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
        return;
    }
    
    // –ü—Ä–æ—Å—Ç–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    // –≠—Ç–æ –∏–∑–±–µ–≥–∞–µ—Ç —Å–ª–æ–∂–Ω—ã—Ö AJAX –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    setTimeout(() => {
        window.location.reload();
    }, 500);
}

/**
 * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function showNotification(message, type = 'info', duration = null) {
    console.log(`üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ [${type}]:`, message);
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞
    $(`.toast.${getToastClass(type)}`).remove();
    
    const toastClass = getToastClass(type);
    const toastIcon = getToastIcon(type);
    const toastTitle = getToastTitle(type);
    const autohide = duration !== null ? duration > 0 : type !== 'error';
    const delay = duration || (type === 'error' ? 7000 : type === 'warning' ? 5000 : 3000);
    
    const toastHtml = `
        <div class="toast ${toastClass} text-white" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i class="bi ${toastIcon} me-2"></i>
                <strong class="me-auto">${toastTitle}</strong>
                <small class="text-muted">—Å–µ–π—á–∞—Å</small>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body">
                ${message}
            </div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è toast –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!$('.toast-container').length) {
        $('body').append('<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;"></div>');
    }
    
    const $toast = $(toastHtml);
    $('.toast-container').append($toast);
    
    const toast = new bootstrap.Toast($toast[0], {
        autohide: autohide,
        delay: delay
    });
    
    toast.show();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
    $toast.on('hidden.bs.toast', function() {
        $(this).remove();
    });
}

/**
 * –ü–æ–∫–∞–∑ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–µ
 */
function showFormErrors(form, errors) {
    console.log('‚ùå –ü–æ–∫–∞–∑ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', errors);
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
    clearFormErrors(form);
    
    Object.keys(errors).forEach(fieldName => {
        const field = form.querySelector(`[name="${fieldName}"]`);
        if (field) {
            field.classList.add('is-invalid');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Å—Ç—Ä—è—Ö–∏–≤–∞–Ω–∏—è
            field.classList.add('shake');
            setTimeout(() => field.classList.remove('shake'), 500);
            
            // –ò—â–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—à–∏–±–∫–∏
            let errorElement = field.parentNode.querySelector('.invalid-feedback');
            if (!errorElement) {
                errorElement = document.createElement('div');
                errorElement.className = 'invalid-feedback';
                field.parentNode.appendChild(errorElement);
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –æ—à–∏–±–∫—É —Å –∏–∫–æ–Ω–∫–æ–π
            errorElement.innerHTML = `<i class="bi bi-exclamation-circle me-1"></i>${errors[fieldName][0]}`;
            
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π
            if (Object.keys(errors)[0] === fieldName) {
                field.focus();
            }
        }
    });
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—é —Å –æ—à–∏–±–∫–æ–π
    const firstError = form.querySelector('.is-invalid');
    if (firstError) {
        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–µ
 */
function clearFormErrors(form) {
    const invalidFields = form.querySelectorAll('.is-invalid');
    invalidFields.forEach(field => {
        field.classList.remove('is-invalid', 'shake');
    });
    
    const errorElements = form.querySelectorAll('.invalid-feedback');
    errorElements.forEach(element => {
        element.remove();
    });
}

/**
 * –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —Å –æ—á–∏—Å—Ç–∫–æ–π –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
 */
function resetForm(form) {
    form.reset();
    clearFormErrors(form);
    
    // –û—á–∏—â–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è ID
    const idFields = form.querySelectorAll('input[name$="_id"]');
    idFields.forEach(field => field.value = '');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º method field
    const methodField = form.querySelector('input[name="_method"]');
    if (methodField) {
        methodField.remove();
    }
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–µ —Å—É–º–º—ã
    updateFormTotals(form);
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤—ã—Ö —Å—É–º–º –≤ —Ñ–æ—Ä–º–∞—Ö
 */
function updateFormTotals(form) {
    const formId = form.id;
    
    if (formId === 'workForm') {
        updateWorkTotal();
    } else if (formId === 'materialForm') {
        updateMaterialTotal();
    } else if (formId === 'transportForm') {
        updateTransportTotal();
    }
}

/**
 * –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 */
function showPageLoader(show) {
    if (show) {
        if (!$('#page-loader-overlay').length) {
            $('body').append(`
                <div id="page-loader-overlay" style="
                    position: fixed;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    background: rgba(255,255,255,0.8);
                    z-index: 9998;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                ">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                    </div>
                </div>
            `);
        }
        $('#page-loader-overlay').fadeIn(200);
    } else {
        $('#page-loader-overlay').fadeOut(200, function() {
            $(this).remove();
        });
    }
}

/**
 * –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
function showContentLoader(show) {
    const containers = [
        '#worksContainer', 
        '#materialsContainer', 
        '#transportContainer',
        '.finance-summary'
    ];
    
    if (show) {
        containers.forEach(selector => {
            const $container = $(selector);
            if ($container.length && !$container.find('.content-loader').length) {
                $container.append(`
                    <div class="content-loader text-center py-3">
                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                            <span class="visually-hidden">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...</span>
                        </div>
                        <div class="mt-2 text-muted small">–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...</div>
                    </div>
                `);
            }
        });
    } else {
        $('.content-loader').remove();
    }
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –≤–∫–ª–∞–¥–∫–∞—Ö
 */
function updateTabCounters(counts) {
    if (counts.works !== undefined) {
        $('[data-counter="works"]').text(counts.works);
    }
    if (counts.materials !== undefined) {
        $('[data-counter="materials"]').text(counts.materials);
    }
    if (counts.transports !== undefined) {
        $('[data-counter="transport"]').text(counts.transports);
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è tooltips –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
function initTooltips() {
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
        if (!bootstrap.Tooltip.getInstance(tooltipTriggerEl)) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        }
    });
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
function initNewElementHandlers() {
    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
    $('[data-delete-type][data-delete-id]').off('click.delete').on('click.delete', function(e) {
        e.preventDefault();
        const type = $(this).data('delete-type');
        const id = $(this).data('delete-id');
        deleteFinanceRecord(type, id);
    });
    
    // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    $('[data-edit-type][data-edit-id]').off('click.edit').on('click.edit', function(e) {
        e.preventDefault();
        const type = $(this).data('edit-type');
        const id = $(this).data('edit-id');
        const data = $(this).data('edit-data');
        
        if (type === 'work' && typeof editWork === 'function') {
            editWork(id, data);
        } else if (type === 'material' && typeof editMaterial === 'function') {
            editMaterial(id, data);
        } else if (type === 'transport' && typeof editTransport === 'function') {
            editTransport(id, data);
        }
    });
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function getToastClass(type) {
    switch(type) {
        case 'success': return 'bg-success';
        case 'error': return 'bg-danger';
        case 'warning': return 'bg-warning';
        default: return 'bg-info';
    }
}

function getToastIcon(type) {
    switch(type) {
        case 'success': return 'bi-check-circle-fill';
        case 'error': return 'bi-exclamation-triangle-fill';
        case 'warning': return 'bi-exclamation-circle-fill';
        default: return 'bi-info-circle-fill';
    }
}

function getToastTitle(type) {
    switch(type) {
        case 'success': return '–£—Å–ø–µ—à–Ω–æ';
        case 'error': return '–û—à–∏–±–∫–∞';
        case 'warning': return '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ';
        default: return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è';
    }
}

/**
 * –û—Å—Ç–∞–ª—å–Ω—ã–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */
function getTypeLabel(type) {
    switch(type) {
        case 'work': return '—Ä–∞–±–æ—Ç—É';
        case 'material': return '–º–∞—Ç–µ—Ä–∏–∞–ª';
        case 'transport': return '—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç';
        case 'finance': return '—Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∑–∞–ø–∏—Å—å';
        default: return '–∑–∞–ø–∏—Å—å';
    }
}

function getDeleteUrl(type, id) {
    const baseUrl = `/partner/projects/${window.projectId}`;
    switch(type) {
        case 'work': return `${baseUrl}/works/${id}`;
        case 'material': return `${baseUrl}/materials/${id}`;
        case 'transport': return `${baseUrl}/transports/${id}`;
        case 'finance': return `${baseUrl}/finances/${id}`;
        default: return '#';
    }
}

/**
 * –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤—ã—Ö —Å—É–º–º
 */
function updateWorkTotal() {
    calculateTotal('workPrice', 'workQuantity', 'workTotalCost');
}

function updateMaterialTotal() {
    calculateTotal('materialPrice', 'materialQuantity', 'materialTotalCost');
}

function updateTransportTotal() {
    calculateTotal('transportPrice', 'transportQuantity', 'transportTotalCost');
}

function calculateTotal(priceId, quantityId, totalId) {
    const priceInput = document.getElementById(priceId);
    const quantityInput = document.getElementById(quantityId);
    const totalElement = document.getElementById(totalId);
    
    if (priceInput && quantityInput && totalElement) {
        const price = parseFloat(priceInput.value) || 0;
        const quantity = parseFloat(quantityInput.value) || 0;
        const total = price * quantity;
        
        totalElement.textContent = total.toLocaleString('ru-RU', {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2
        }) + ' ‚ÇΩ';
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ amount –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        const amountField = priceInput.form?.querySelector(`input[name="amount"]`);
        if (amountField) {
            amountField.value = total.toFixed(2);
        }
    }
}

/**
 * –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
window.deleteWork = function(id) {
    deleteFinanceRecord('work', id);
};

window.deleteMaterial = function(id) {
    deleteFinanceRecord('material', id);
};

window.deleteTransport = function(id) {
    deleteFinanceRecord('transport', id);
};

window.deleteFinance = function(id) {
    deleteFinanceRecord('finance', id);
};

// –≠–∫—Å–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
window.initFinanceAjax = initFinanceAjax;
window.refreshFinanceData = refreshFinanceData;
window.showNotification = showNotification;
window.deleteFinanceRecord = deleteFinanceRecord;
window.clearFormErrors = clearFormErrors;
window.showFormErrors = showFormErrors;
window.resetForm = resetForm;
window.updateWorkTotal = updateWorkTotal;
window.updateMaterialTotal = updateMaterialTotal;
window.updateTransportTotal = updateTransportTotal;
window.calculateTotal = calculateTotal;
window.showPageLoader = showPageLoader;
window.editWork = editWork;
window.editMaterial = editMaterial;
window.editTransport = editTransport;
window.fillWorkForm = fillWorkForm;
window.fillMaterialForm = fillMaterialForm;
window.fillTransportForm = fillTransportForm;

// CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
const style = document.createElement('style');
style.textContent = `
    .spin {
        animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    .shake {
        animation: shake 0.5s;
    }
    
    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
        20%, 40%, 60%, 80% { transform: translateX(5px); }
    }
    
    .content-loader {
        position: relative;
        background: rgba(255,255,255,0.9);
        border-radius: 0.375rem;
    }
    
    .fade-in {
        animation: fadeIn 0.3s ease-in;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    .fade-out {
        animation: fadeOut 0.3s ease-out;
    }
    
    @keyframes fadeOut {
        from { opacity: 1; }
        to { opacity: 0; }
    }
`;
document.head.appendChild(style);

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
$(document).ready(function() {
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    setTimeout(function() {
        if (!window.financeAjaxInitialized) {
            console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AJAX...');
            initFinanceAjax();
        } else {
            console.log('‚ÑπÔ∏è AJAX —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
        }
    }, 1000);
});

console.log('‚úÖ finance-ajax.js v2.3 –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');
