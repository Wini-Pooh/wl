<!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ -->
<div class="modal fade" id="uploadDocumentModal" tabindex="-1" aria-labelledby="uploadDocumentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="uploadDocumentModalLabel">
                    <i class="bi bi-file-earmark-text me-2"></i>–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form action="<?php echo e(route('partner.projects.documents.upload', $project ?? ['id' => 'PROJECT_ID'])); ?>" method="POST" enctype="multipart/form-data" id="uploadDocumentForm">
                    <?php echo csrf_field(); ?>
                    <input type="hidden" id="documentProjectId" name="project_id" value="<?php echo e($project->id ?? ''); ?>">
                    
                    <!-- –ó–æ–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ -->
                    <div class="upload-zone mb-4" id="documentUploadZone">
                        <div class="upload-content text-center p-4 border border-dashed rounded">
                            <i class="bi bi-file-earmark-text display-4 text-muted mb-3"></i>
                            <h5>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏</h5>
                            <p class="text-muted mb-3">–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PDF, DOC, DOCX, XLS, XLSX, TXT, RTF</p>
                            <button type="button" class="btn btn-outline-primary" id="selectDocumentFilesBtn">
                                <i class="bi bi-folder2-open me-1"></i>–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª—ã
                            </button>
                            <input type="file" id="documentFileInput" name="documents[]" multiple 
                                   accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.rtf" class="d-none" required>
                            <small class="text-muted d-block mt-2">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 50 –ú–ë</small>
                        </div>
                    </div>
                    
                    <!-- –°–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ -->
                    <div id="documentFileList" class="d-none">
                        <h6 class="fw-bold mb-3">–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</h6>
                        <div id="documentFileItems" class="file-list mb-3"></div>
                    </div>
                    
                    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã -->
                    <div class="row">
                        <div class="col-md-6">
                            <label for="documentTypeSelect" class="form-label">–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞</label>
                            <div class="input-group">
                                <select class="form-select" id="documentTypeSelect" name="document_type" onchange="handleDocumentTypeChange()">
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                                    <option value="contract">–î–æ–≥–æ–≤–æ—Ä</option>
                                    <option value="specification">–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è</option>
                                    <option value="blueprint">–ß–µ—Ä—Ç–µ–∂</option>
                                    <option value="estimate">–°–º–µ—Ç–∞</option>
                                    <option value="permit">–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ</option>
                                    <option value="certificate">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç</option>
                                    <option value="invoice">–°—á–µ—Ç-—Ñ–∞–∫—Ç—É—Ä–∞</option>
                                    <option value="report">–û—Ç—á–µ—Ç</option>
                                    <option value="other">–î—Ä—É–≥–æ–µ</option>
                                </select>
                                <button type="button" class="btn btn-outline-secondary" id="customDocumentTypeBtn" onclick="toggleCustomDocumentType()" style="display: none;">
                                    <i class="bi bi-pencil"></i>
                                </button>
                            </div>
                            <input type="text" class="form-control mt-2 d-none" id="customDocumentType" name="custom_document_type" placeholder="–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞">
                        </div>
                        <div class="col-md-6">
                            <label for="documentCategorySelect" class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                            <div class="input-group">
                                <select class="form-select" id="documentCategorySelect" name="category" onchange="handleDocumentCategoryChange()">
                                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                                    <option value="legal">–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ</option>
                                    <option value="technical">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ</option>
                                    <option value="financial">–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ</option>
                                    <option value="administrative">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ</option>
                                    <option value="quality">–ö–∞—á–µ—Å—Ç–≤–æ</option>
                                    <option value="safety">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
                                    <option value="other">–î—Ä—É–≥–æ–µ</option>
                                </select>
                                <button type="button" class="btn btn-outline-secondary" id="customDocumentCategoryBtn" onclick="toggleCustomDocumentCategory()" style="display: none;">
                                    <i class="bi bi-pencil"></i>
                                </button>
                            </div>
                            <input type="text" class="form-control mt-2 d-none" id="customDocumentCategory" name="custom_category" placeholder="–£–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é">
                        </div>
                    </div>
                    
                    <div class="row mt-3">
                        <div class="col-12">
                            <label for="documentDescription" class="form-label">–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label>
                            <textarea class="form-control" id="documentDescription" name="description" rows="3" 
                                    placeholder="–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º"></textarea>
                        </div>
                    </div>
                    
                    <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ -->
                    <div id="documentUploadProgress" class="d-none mt-3">
                        <label class="form-label">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤:</label>
                        <div class="progress">
                            <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                        </div>
                        <small class="text-muted" id="documentProgressText">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ...</small>
                    </div>
                    
                    <div class="d-flex justify-content-end mt-4">
                        <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">–û—Ç–º–µ–Ω–∞</button>
                        <button type="button" class="btn btn-primary" id="uploadDocumentBtn" disabled>
                            <i class="bi bi-cloud-upload me-1"></i>–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
if (!window.documentModalInitialized) {
    window.documentModalInitialized = true;

    // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ ProjectManager
    $(document).ready(function() {
        if (window.projectManager) {
            window.projectManager.initModal('uploadDocumentModal', 'document', function() {
                initDocumentModalHandlers();
            });
        } else {
            // Fallback –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            console.warn('‚ö†Ô∏è ProjectManager –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
            initDocumentModalHandlers();
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    $('#uploadDocumentModal').on('hidden.bs.modal', function () {
        console.log('üîÑ –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
        $('#uploadDocumentForm')[0].reset();
        $('#documentFileList').addClass('d-none');
        $('#documentFileItems').empty();
        $('#uploadDocumentBtn').prop('disabled', true);
        hideDocumentUploadProgress();
    });
}

function initDocumentModalHandlers() {
    console.log('üìÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –º–æ–¥–∞–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∏ –ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    if (window.documentUploadHandlersInitialized) {
        console.log('‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º projectId –≤ —Ñ–æ—Ä–º–µ
    const formProjectId = $('#documentProjectId').val();
    console.log('Project ID –≤ —Ñ–æ—Ä–º–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', formProjectId);
    
    // –ï—Å–ª–∏ –≤ —Ñ–æ—Ä–º–µ –Ω–µ—Ç projectId, –ø–æ–ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ
    if (!formProjectId || formProjectId === '') {
        const globalProjectId = window.projectId;
        if (globalProjectId) {
            $('#documentProjectId').val(globalProjectId);
            console.log('‚úÖ Project ID –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Ñ–æ—Ä–º–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', globalProjectId);
        } else {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Project ID –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
        }
    }
    
    initDocumentUploadHandlers();
}

function initDocumentUploadHandlers() {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (window.documentUploadHandlersInitialized) {
        console.log('‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        return;
    }
    
    console.log('üìÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
    window.documentUploadHandlersInitialized = true;
    
    const uploadZone = document.getElementById('documentUploadZone');
    const fileInput = document.getElementById('documentFileInput');
    const fileList = document.getElementById('documentFileList');
    const fileItems = document.getElementById('documentFileItems');
    const uploadBtn = document.getElementById('uploadDocumentBtn');
    let selectedFiles = [];

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (uploadZone._documentHandlersAttached) {
        console.log('üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤...');
        uploadZone.replaceWith(uploadZone.cloneNode(true));
    }

    uploadZone._documentHandlersAttached = true;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drag & drop
    uploadZone.addEventListener('dragover', function(e) {
        e.preventDefault();
        uploadZone.classList.add('dragover');
    });

    uploadZone.addEventListener('dragleave', function(e) {
        uploadZone.classList.remove('dragover');
    });

    uploadZone.addEventListener('drop', function(e) {
        e.preventDefault();
        uploadZone.classList.remove('dragover');
        const files = Array.from(e.dataTransfer.files);
        handleFileSelection(files);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
    fileInput.addEventListener('change', function(e) {
        const files = Array.from(e.target.files);
        handleFileSelection(files);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
    const selectButton = document.getElementById('selectDocumentFilesBtn');
    if (selectButton && !selectButton._documentClickHandlerAttached) {
        selectButton._documentClickHandlerAttached = true;
        selectButton.addEventListener('click', function() {
            fileInput.click();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏
    if (uploadBtn && !uploadBtn._documentUploadHandlerAttached) {
        uploadBtn._documentUploadHandlerAttached = true;
        uploadBtn.addEventListener('click', function() {
            uploadDocuments();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    function handleFileSelection(files) {
        console.log('üìÑ –í—ã–±—Ä–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', files.length);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
        const allowedTypes = ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.txt', '.rtf'];
        const validFiles = files.filter(file => {
            const extension = '.' + file.name.split('.').pop().toLowerCase();
            return allowedTypes.includes(extension);
        });

        if (validFiles.length !== files.length) {
            alert('–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã –∏–º–µ—é—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã.');
        }

        selectedFiles = validFiles;
        displaySelectedFiles();
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    function displaySelectedFiles() {
        if (selectedFiles.length === 0) {
            fileList.classList.add('d-none');
            uploadBtn.disabled = true;
            return;
        }

        fileItems.innerHTML = '';
        
        selectedFiles.forEach((file, index) => {
            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';
            fileItem.innerHTML = `
                <div class="file-icon">
                    <i class="${getDocumentIcon(file.type, file.name)} text-primary"></i>
                </div>
                <div class="file-info">
                    <div class="file-name">${file.name}</div>
                    <div class="file-size">${formatFileSize(file.size)}</div>
                </div>
                <div class="file-actions">
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeDocumentFile(${index})">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            `;
            fileItems.appendChild(fileItem);
        });

        fileList.classList.remove('d-none');
        uploadBtn.disabled = false;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è —Ñ–∞–π–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    function getDocumentIcon(fileType, fileName) {
        const extension = fileName.split('.').pop().toLowerCase();
        
        switch (extension) {
            case 'pdf':
                return 'bi bi-file-earmark-pdf';
            case 'doc':
            case 'docx':
                return 'bi bi-file-earmark-word';
            case 'xls':
            case 'xlsx':
                return 'bi bi-file-earmark-excel';
            case 'txt':
                return 'bi bi-file-earmark-text';
            case 'rtf':
                return 'bi bi-file-earmark-richtext';
            default:
                return 'bi bi-file-earmark';
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
    window.removeDocumentFile = function(index) {
        selectedFiles.splice(index, 1);
        displaySelectedFiles();
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
    function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    function uploadDocuments() {
        if (selectedFiles.length === 0) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
            return;
        }

        const projectId = $('#documentProjectId').val();
        if (!projectId) {
            alert('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –ø—Ä–æ–µ–∫—Ç–∞');
            return;
        }

        const formData = new FormData();
        formData.append('project_id', projectId);
        formData.append('document_type', $('#documentTypeSelect').val() || $('#customDocumentType').val());
        formData.append('category', $('#documentCategorySelect').val() || $('#customDocumentCategory').val());
        formData.append('description', $('#documentDescription').val());

        selectedFiles.forEach(file => {
            formData.append('documents[]', file);
        });

        showDocumentUploadProgress();
        uploadBtn.disabled = true;

        $.ajax({
            url: `/partner/projects/${projectId}/documents/upload`,
            method: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            xhr: function() {
                const xhr = new window.XMLHttpRequest();
                xhr.upload.addEventListener('progress', function(e) {
                    if (e.lengthComputable) {
                        const percentComplete = (e.loaded / e.total) * 100;
                        updateDocumentProgress(percentComplete);
                    }
                });
                return xhr;
            },
            success: function(response) {
                console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', response);
                hideDocumentUploadProgress();
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                $('#uploadDocumentModal').modal('hide');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
                if (typeof showNotification === 'function') {
                    showNotification('–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
                } else {
                    alert('–î–æ–∫—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ —Ä–∞–∑–¥–µ–ª —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
                if (typeof refreshDocuments === 'function') {
                    refreshDocuments();
                } else {
                    location.reload();
                }
            },
            error: function(xhr, status, error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', error);
                hideDocumentUploadProgress();
                uploadBtn.disabled = false;
                
                const errorMessage = xhr.responseJSON?.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤';
                if (typeof showNotification === 'function') {
                    showNotification(errorMessage, 'error');
                } else {
                    alert(errorMessage);
                }
            }
        });
    }

    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
function handleDocumentTypeChange() {
    const select = document.getElementById('documentTypeSelect');
    const customBtn = document.getElementById('customDocumentTypeBtn');
    const customInput = document.getElementById('customDocumentType');
    
    if (select.value === 'other') {
        customBtn.style.display = 'block';
        customInput.classList.remove('d-none');
        customInput.required = true;
    } else {
        customBtn.style.display = 'none';
        customInput.classList.add('d-none');
        customInput.required = false;
        customInput.value = '';
    }
}

function toggleCustomDocumentType() {
    const select = document.getElementById('documentTypeSelect');
    const customInput = document.getElementById('customDocumentType');
    
    if (customInput.classList.contains('d-none')) {
        select.value = 'other';
        customInput.classList.remove('d-none');
        customInput.focus();
        customInput.required = true;
    } else {
        select.value = '';
        customInput.classList.add('d-none');
        customInput.value = '';
        customInput.required = false;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function handleDocumentCategoryChange() {
    const select = document.getElementById('documentCategorySelect');
    const customBtn = document.getElementById('customDocumentCategoryBtn');
    const customInput = document.getElementById('customDocumentCategory');
    
    if (select.value === 'other') {
        customBtn.style.display = 'block';
        customInput.classList.remove('d-none');
        customInput.required = true;
    } else {
        customBtn.style.display = 'none';
        customInput.classList.add('d-none');
        customInput.required = false;
        customInput.value = '';
    }
}

function toggleCustomDocumentCategory() {
    const select = document.getElementById('documentCategorySelect');
    const customInput = document.getElementById('customDocumentCategory');
    
    if (customInput.classList.contains('d-none')) {
        select.value = 'other';
        customInput.classList.remove('d-none');
        customInput.focus();
        customInput.required = true;
    } else {
        select.value = '';
        customInput.classList.add('d-none');
        customInput.value = '';
        customInput.required = false;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –∑–∞–≥—Ä—É–∑–∫–∏
function showDocumentUploadProgress() {
    const progressContainer = document.getElementById('documentUploadProgress');
    const progressBar = progressContainer.querySelector('.progress-bar');
    const progressText = document.getElementById('documentProgressText');
    
    progressContainer.classList.remove('d-none');
    progressBar.style.width = '0%';
    progressText.textContent = '–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏...';
}

function updateDocumentProgress(percent) {
    const progressBar = document.querySelector('#documentUploadProgress .progress-bar');
    const progressText = document.getElementById('documentProgressText');
    
    progressBar.style.width = percent + '%';
    progressText.textContent = `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${Math.round(percent)}%`;
}

function hideDocumentUploadProgress() {
    const progressContainer = document.getElementById('documentUploadProgress');
    progressContainer.classList.add('d-none');
}
</script>
<?php /**PATH C:\OSPanel\domains\rem\resources\views/partner/projects/tabs/modals/document-modal.blade.php ENDPATH**/ ?>