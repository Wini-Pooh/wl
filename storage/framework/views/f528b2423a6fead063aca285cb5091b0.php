

<?php $__env->startSection('page-content'); ?>
    <?php echo $__env->make('partner.projects.tabs.schedule', \Illuminate\Support\Arr::except(get_defined_vars(), ['__data', '__path']))->render(); ?>
    
    <!-- –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è -->
    <?php echo $__env->make('partner.projects.tabs.modals.stage-modal', \Illuminate\Support\Arr::except(get_defined_vars(), ['__data', '__path']))->render(); ?>
    <?php echo $__env->make('partner.projects.tabs.modals.event-modal', \Illuminate\Support\Arr::except(get_defined_vars(), ['__data', '__path']))->render(); ?>
<?php $__env->stopSection(); ?>

<?php $__env->startSection('styles'); ?>
    <?php echo \Illuminate\View\Factory::parentPlaceholder('styles'); ?>
    <!-- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥—Ä–∞—Ñ–∏–∫–∞ -->
    <link rel="stylesheet" href="<?php echo e(asset('css/mobile-filters.css')); ?>">
    <style>
        /* –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥—Ä–∞—Ñ–∏–∫–∞ */
        .timeline-container {
            position: relative;
            padding: 1rem 0;
        }
        
        .stage-card {
            border-left: 4px solid #007bff;
            transition: all 0.3s ease;
        }
        
        .stage-card:hover {
            border-left-color: #0056b3;
            box-shadow: 0 4px 12px rgba(0,123,255,0.15);
        }
        
        .stage-card.completed {
            border-left-color: #28a745;
            background-color: #f8fff9;
        }
        
        .stage-progress {
            height: 6px;
            background: #e9ecef;
            border-radius: 3px;
            overflow: hidden;
        }
        
        .stage-progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #007bff, #0056b3);
            transition: width 0.3s ease;
        }
    </style>
<?php $__env->stopSection(); ?>

<?php $__env->startSection('scripts'); ?>
    <?php echo \Illuminate\View\Factory::parentPlaceholder('scripts'); ?>
    <script>
        $(document).ready(function() {
            console.log('=== –°–¢–†–ê–ù–ò–¶–ê –†–ê–°–ü–ò–°–ê–ù–ò–Ø –ü–†–û–ï–ö–¢–ê ===');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ ProjectManager
            if (window.projectManager) {
                window.projectManager.initPage('schedule', function() {
                    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ ProjectManager');
                    loadScheduleData();
                    initScheduleHandlers();
                });
            } else {
                console.warn('‚ö†Ô∏è ProjectManager –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
                initSchedulePage();
            }
        });
        
        function initSchedulePage() {
            console.log('üìÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ —ç—Ç–∞–ø—ã
            loadScheduleData();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            initScheduleHandlers();
        }
        
        function loadScheduleData() {
            const projectId = window.projectId;
            if (!projectId) return;
            
            console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —ç—Ç–∞–ø—ã –ø—Ä–æ–µ–∫—Ç–∞
            $.ajax({
                url: `/partner/projects/${projectId}/stages-partial`,
                method: 'GET',
                success: function(response) {
                    console.log('‚úÖ –≠—Ç–∞–ø—ã –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                    if (response.stages && response.stages.length > 0) {
                        displayStages(response.stages);
                    } else {
                        displayEmptyStages();
                    }
                },
                error: function(xhr) {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ç–∞–ø–æ–≤:', xhr);
                }
            });
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–±—ã—Ç–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
            $.ajax({
                url: `/partner/projects/${projectId}/events-partial`,
                method: 'GET',
                success: function(response) {
                    console.log('‚úÖ –°–æ–±—ã—Ç–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                    if (response.events && response.events.length > 0) {
                        displayEvents(response.events);
                    } else {
                        displayEmptyEvents();
                    }
                },
                error: function(xhr) {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–±—ã—Ç–∏–π:', xhr);
                }
            });
        }
        
        function displayStages(stages) {
            const container = $('#stagesContainer');
            if (!container.length) return;
            
            container.empty();
            
            stages.forEach(stage => {
                console.log('üìã –≠—Ç–∞–ø:', stage); // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                const progress = stage.progress || 0;
                const statusClass = stage.status === 'completed' ? 'completed' : 
                                   (stage.status === 'in_progress' ? 'in-progress' : 'pending');
                
                const stageHtml = `
                    <div class="card mb-3 stage-card ${statusClass}" data-stage-id="${stage.id}">
                        <div class="card-body">
                            <div class="row align-items-center">
                                <div class="col-md-8">
                                    <h6 class="card-title mb-1">${stage.name}</h6>
                                    <p class="card-text text-muted small mb-2">${stage.description || ''}</p>
                                    <div class="stage-progress mb-2">
                                        <div class="stage-progress-bar" style="width: ${progress}%"></div>
                                    </div>
                                    <div class="text-muted small">
                                        <i class="bi bi-calendar me-1"></i>
                                        ${formatDateRange(stage.start_date, stage.end_date)}
                                    </div>
                                </div>
                                <div class="col-md-4 text-end">
                                    <div class="badge ${getStatusBadgeClass(stage.status)} mb-2">${getStatusText(stage.status)}</div>
                                    <div class="btn-group d-block" role="group">
                                        <button class="btn btn-sm btn-outline-primary edit-stage-btn" 
                                                data-stage-id="${stage.id}">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        ${stage.status !== 'completed' ? `
                                            <button class="btn btn-sm btn-outline-success complete-stage-btn" 
                                                    data-stage-id="${stage.id}">
                                                <i class="bi bi-check"></i>
                                            </button>
                                        ` : ''}
                                        <button class="btn btn-sm btn-outline-danger delete-stage-btn" 
                                                data-stage-id="${stage.id}">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                container.append(stageHtml);
            });
        }
        
        function displayEmptyStages() {
            const container = $('#stagesContainer');
            if (!container.length) return;
            
            container.html(`
                <div class="text-center text-muted py-5">
                    <i class="bi bi-list-task display-4"></i>
                    <p class="mt-3">–≠—Ç–∞–ø–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ–∫–∞ –Ω–µ—Ç</p>
                    <button class="btn btn-primary" data-modal-type="stage">
                        <i class="bi bi-plus me-1"></i>
                        –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø
                    </button>
                </div>
            `);
        }
        
        function displayEvents(events) {
            const container = $('#eventsContainer');
            if (!container.length) return;
            
            container.empty();
            
            // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ –¥–∞—Ç–∞–º
            const groupedEvents = groupEventsByDate(events);
            
            Object.keys(groupedEvents).forEach(date => {
                const dateHtml = `
                    <div class="events-date-group mb-4">
                        <h6 class="text-primary mb-3">
                            <i class="bi bi-calendar-event me-2"></i>
                            ${formatScheduleDate(date)}
                        </h6>
                        <div class="events-list">
                            ${groupedEvents[date].map(event => createEventCard(event)).join('')}
                        </div>
                    </div>
                `;
                container.append(dateHtml);
            });
        }
        
        function displayEmptyEvents() {
            const container = $('#eventsContainer');
            if (!container.length) return;
            
            container.html(`
                <div class="text-center text-muted py-5">
                    <i class="bi bi-calendar-x display-4"></i>
                    <p class="mt-3">–°–æ–±—ã—Ç–∏–π –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç</p>
                    <button class="btn btn-primary" data-modal-type="event">
                        <i class="bi bi-plus me-1"></i>
                        –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ
                    </button>
                </div>
            `);
        }
        
        function createEventCard(event) {
            const startTime = event.start_date ? formatTime(event.start_date) : '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            const endTime = event.end_date ? formatTime(event.end_date) : '';
            const timeRange = endTime ? `${startTime} - ${endTime}` : startTime;
            
            return `
                <div class="card mb-2 event-card" data-event-id="${event.id}">
                    <div class="card-body py-2">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h6 class="card-title mb-1">${event.title}</h6>
                                <p class="card-text text-muted small mb-1">${event.description || ''}</p>
                                <div class="text-muted small">
                                    <i class="bi bi-clock me-1"></i>
                                    ${timeRange}
                                </div>
                            </div>
                            <div class="col-md-4 text-end">
                                <div class="btn-group" role="group">
                                    <button class="btn btn-sm btn-outline-primary edit-event-btn" 
                                            data-event-id="${event.id}">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger delete-event-btn" 
                                            data-event-id="${event.id}">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
        }
        
        function initScheduleHandlers() {
            console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
            $(document).off('click', '[data-modal-type="stage"]').on('click', '[data-modal-type="stage"]', function(e) {
                e.preventDefault();
                e.stopPropagation();
                console.log('üîò –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç—Ç–∞–ø–∞');
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —ç—Ç–∞–ø–∞ –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                if (typeof window.openNewStageModal === 'function') {
                    window.openNewStageModal();
                } else if (typeof window.testStageModal === 'function') {
                    window.testStageModal();
                } else {
                    // Fallback - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–ø—Ä—è–º—É—é
                    console.log('‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ openNewStageModal –∏ testStageModal –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                    const modal = new bootstrap.Modal(document.getElementById('stageModal'));
                    modal.show();
                }
                
                return false;
            });
            
            $(document).off('click', '[data-modal-type="event"]').on('click', '[data-modal-type="event"]', function(e) {
                e.preventDefault();
                console.log('üîò –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è');
                
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Å–æ–±—ã—Ç–∏—è –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                if (typeof window.testEventModal === 'function') {
                    window.testEventModal();
                } else {
                    // Fallback - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–ø—Ä—è–º—É—é
                    const modal = new bootstrap.Modal(document.getElementById('eventModal'));
                    modal.show();
                }
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–∞–ø–æ–≤
            $(document).off('click', '.edit-stage-btn').on('click', '.edit-stage-btn', function(e) {
                e.preventDefault();
                const stageId = $(this).data('stage-id');
                editStageFromSchedule(stageId);
            });
            
            $(document).off('click', '.complete-stage-btn').on('click', '.complete-stage-btn', function(e) {
                e.preventDefault();
                const stageId = $(this).data('stage-id');
                console.log('üîò –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–∞–ø–∞ –Ω–∞–∂–∞—Ç–∞, ID —ç—Ç–∞–ø–∞:', stageId);
                console.log('üîò –≠–ª–µ–º–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏:', this);
                console.log('üîò data-stage-id:', $(this).attr('data-stage-id'));
                
                if (!stageId) {
                    console.error('‚ùå ID —ç—Ç–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ data-stage-id');
                    alert('–û—à–∏–±–∫–∞: ID —ç—Ç–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
                    return;
                }
                
                completeStage(stageId);
            });
            
            $(document).off('click', '.delete-stage-btn').on('click', '.delete-stage-btn', function(e) {
                e.preventDefault();
                const stageId = $(this).data('stage-id');
                deleteStage(stageId);
            });
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
            $(document).off('click', '.edit-event-btn').on('click', '.edit-event-btn', function(e) {
                e.preventDefault();
                const eventId = $(this).data('event-id');
                editEventFromSchedule(eventId);
            });
            
            $(document).off('click', '.delete-event-btn').on('click', '.delete-event-btn', function(e) {
                e.preventDefault();
                const eventId = $(this).data('event-id');
                deleteEvent(eventId);
            });
        }
        
        function editStageFromSchedule(stageId) {
            console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç—Ç–∞–ø–∞:', stageId);
            
            // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ stage-modal.blade.php
            if (typeof window.editStage === 'function') {
                window.editStage(stageId);
            } else {
                console.error('‚ùå –§—É–Ω–∫—Ü–∏—è editStage –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                alert('–û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        }
        
        function completeStage(stageId) {
            console.log('‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —ç—Ç–∞–ø–∞:', stageId);
            console.log('üÜî window.projectId:', window.projectId);
            
            if (!window.projectId) {
                console.error('‚ùå window.projectId –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
                alert('–û—à–∏–±–∫–∞: ID –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä–∏–º CSRF —Ç–æ–∫–µ–Ω
            const csrfToken = $('meta[name="csrf-token"]').attr('content');
            console.log('üîê CSRF Token:', csrfToken ? '–Ω–∞–π–¥–µ–Ω' : '–ù–ï –ù–ê–ô–î–ï–ù');
            
            if (!csrfToken) {
                console.error('‚ùå CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
                alert('–û—à–∏–±–∫–∞: CSRF —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω');
                return;
            }
            
          
            
            const url = `/partner/projects/${window.projectId}/stages/${stageId}/complete`;
            console.log('üåê AJAX URL:', url);
            
            $.ajax({
                url: url,
                method: 'PATCH',
                headers: {
                    'X-CSRF-TOKEN': csrfToken
                },
                success: function(response) {
                    console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:', response);
                   
                    loadScheduleData();
                },
                error: function(xhr) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–∞–ø–∞:', xhr);
                    console.error('‚ùå –°—Ç–∞—Ç—É—Å:', xhr.status);
                    console.error('‚ùå –û—Ç–≤–µ—Ç:', xhr.responseText);
                    alert('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —ç—Ç–∞–ø–∞: ' + xhr.status + ' - ' + xhr.responseText);
                }
            });
        }
        
        function deleteStage(stageId) {
            console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–∞–ø–∞:', stageId);
            
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —ç—Ç–∞–ø?')) {
                return;
            }
            
            $.ajax({
                url: `/partner/projects/${window.projectId}/stages/${stageId}`,
                method: 'DELETE',
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                },
                success: function(response) {
                    alert('–≠—Ç–∞–ø —É–¥–∞–ª–µ–Ω');
                    loadScheduleData();
                },
                error: function(xhr) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–∞–ø–∞:', xhr);
                    alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —ç—Ç–∞–ø–∞');
                }
            });
        }
        
        function editEventFromSchedule(eventId) {
            console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:', eventId);
            
            // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ event-modal.blade.php
            if (typeof window.editEvent === 'function') {
                window.editEvent(eventId);
            } else {
                console.error('‚ùå –§—É–Ω–∫—Ü–∏—è editEvent –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                alert('–û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            }
        }
        
        function deleteEvent(eventId) {
            console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:', eventId);
            
            if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å–æ–±—ã—Ç–∏–µ?')) {
                return;
            }
            
            $.ajax({
                url: `/partner/projects/${window.projectId}/events/${eventId}`,
                method: 'DELETE',
                headers: {
                    'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
                },
                success: function(response) {
                    alert('–°–æ–±—ã—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ');
                    loadScheduleData();
                },
                error: function(xhr) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è:', xhr);
                    alert('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏—è');
                }
            });
        }
        
        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        function groupEventsByDate(events) {
            const grouped = {};
            
            events.forEach(event => {
                const date = event.start_date ? event.start_date.split(' ')[0] : new Date().toISOString().split('T')[0];
                if (!grouped[date]) {
                    grouped[date] = [];
                }
                grouped[date].push(event);
            });
            
            // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º
            const sortedGrouped = {};
            Object.keys(grouped).sort().forEach(key => {
                sortedGrouped[key] = grouped[key];
            });
            
            return sortedGrouped;
        }
        
        function formatDateRange(startDate, endDate) {
            if (!startDate && !endDate) return '–î–∞—Ç—ã –Ω–µ —É–∫–∞–∑–∞–Ω—ã';
            
            if (startDate && !endDate) {
                return `—Å ${formatDate(startDate)}`;
            }
            
            if (!startDate && endDate) {
                return `–¥–æ ${formatDate(endDate)}`;
            }
            
            return `${formatDate(startDate)} - ${formatDate(endDate)}`;
        }
        
        function formatScheduleDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return new Intl.DateTimeFormat('ru-RU', {
                weekday: 'long',
                day: '2-digit',
                month: 'long',
                year: 'numeric'
            }).format(date);
        }
        
        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return new Intl.DateTimeFormat('ru-RU', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric'
            }).format(date);
        }
        
        function formatTime(dateTimeString) {
            if (!dateTimeString) return '';
            const date = new Date(dateTimeString);
            return new Intl.DateTimeFormat('ru-RU', {
                hour: '2-digit',
                minute: '2-digit'
            }).format(date);
        }
        
        function getStatusText(status) {
            switch(status) {
                case 'completed': return '–ó–∞–≤–µ—Ä—à–µ–Ω';
                case 'in_progress': return '–í —Ä–∞–±–æ—Ç–µ';
                case 'on_hold': return '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω';
                case 'not_started':
                default: return '–ù–µ –Ω–∞—á–∞—Ç';
            }
        }
        
        function getStatusBadgeClass(status) {
            switch(status) {
                case 'completed': return 'bg-success';
                case 'in_progress': return 'bg-warning';
                case 'on_hold': return 'bg-danger';
                case 'not_started':
                default: return 'bg-secondary';
            }
        }
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        window.reloadSchedule = function() {
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...');
            loadScheduleData();
        };
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —ç—Ç–∞–ø–æ–≤ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å stage-modal.blade.php)
        window.reloadStages = function() {
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç—Ç–∞–ø–æ–≤...');
            loadScheduleData();
        };
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å event-modal.blade.php)
        window.reloadEvents = function() {
            console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π...');
            loadScheduleData();
        };
    </script>
<?php $__env->stopSection(); ?>

<?php echo $__env->make('partner.projects.layouts.project-base', \Illuminate\Support\Arr::except(get_defined_vars(), ['__data', '__path']))->render(); ?><?php /**PATH C:\OSPanel\domains\rem\resources\views/partner/projects/pages/schedule.blade.php ENDPATH**/ ?>